#ifndef __Ghost
#define __Ghost

// Ghost uses standard methods
#define GhostMethod$followNodes 1		// portal1, portal2... - Follow path nodes
#define GhostMethod$toggleHunt 2		// (bool)hunting - Start or stop hunting players
#define GhostMethod$setType 3			// (int)ghost_type, (int)evidenceTypes - Sets a ghost type and evidence, affecting its behavior
#define GhostMethod$smudge 4			// void  - Player has used a smudge stick
#define GhostMethod$interact 5			// void - Interact with a nearby item
#define GhostMethod$stop 6				// (bool)stop - Stops the ghost. Useful for debugging
#define GhostMethod$sendToChair 7		// key chair, key hud, int temp - Tells the ghost to go to a chair and trap the player. If no chair is available, drop the player.



#define GhostMethod$cbNodes 100			// Callback for Nodes.lsh getNodes method

#define GhostConst$type$succubus 0			// (Activity added, need player preference) Gets more active as player arousal increases. Will prefer interacting with a particular player if they're nearby. During a hunt, target that player in particular.
#define GhostConst$type$yuri 1				// (Female needed, warp needed) Special ability warps between rooms with plumbing. Prefers female investigators.
#define GhostConst$type$asswang 2			// (Looking at it needed, hunt speed needed) Only active if nobody's looking at it. Moves twice as fast during a hunt unless observed.
#define GhostConst$type$powoltergeist 3		// (Preference needed, head start needed) Prefers interacting with items over players, and can interact with multiple items at once. Gives players 1 sec less head start during a hunt.
#define GhostConst$type$yaoikai 4			// (Deafness needed, male needed, hunt earlier needed) Can hunt much earlier if players are typing within 3m of it. Cannot hear footsteps. Prefers male investigators.
#define GhostConst$type$imp 5				// (Preference needed, luigi board needed) Prefers touching players over interacting with items. No arousal penalty when successfully using a luigi board.
#define GhostConst$type$hantuwu 6			// (Breaker tracking needed) Wanders more often when the breaker is on. Wanders less often when the breaker is off.
#define GhostConst$type$inugami 7			// (Activity check needed, arousal needed) Being within 2m radius of the ghost increases arousal faster. If nobody's in the ghost room it becomes more active.
#define GhostConst$type$obukakke 8			// (Activity needed, light switch needed, hunt detect needed) Hunts earlier and more often when the light is off in the ghost room. Will only turn lights off, not on.

#define GhostEvt$type 1						// int type - Ghost type received

#define onGhostType( type, evidence ) \
	if( SENDER_SCRIPT IS "Ghost" AND EVENT_TYPE IS GhostEvt$type ){ \
		int type = argInt(0); \
		int evidence = argInt(1);


#define GhostConst$evidence$owometer 0x1
#define GhostConst$evidence$writing 0x2
#define GhostConst$evidence$spiritbox 0x4
#define GhostConst$evidence$temps 0x8
#define GhostConst$evidence$hots 0x10

// Corresponds to the ghost type indexes
#define GhostConst$evidenceTypes [\
	GhostConst$evidence$owometer|GhostConst$evidence$spiritbox|GhostConst$evidence$temps, \
	GhostConst$evidence$owometer|GhostConst$evidence$spiritbox|GhostConst$evidence$hots, \
	GhostConst$evidence$owometer|GhostConst$evidence$temps|GhostConst$evidence$temps, \
	GhostConst$evidence$owometer|GhostConst$evidence$writing|GhostConst$evidence$hots, \
	GhostConst$evidence$owometer|GhostConst$evidence$writing|GhostConst$evidence$spiritbox, \
	GhostConst$evidence$writing|GhostConst$evidence$spiritbox|GhostConst$evidence$hots, \
	GhostConst$evidence$writing|GhostConst$evidence$spiritbox|GhostConst$evidence$temps, \
	GhostConst$evidence$writing|GhostConst$evidence$temps|GhostConst$evidence$hots, \
	GhostConst$evidence$temps|GhostConst$evidence$spiritbox|GhostConst$evidence$hots \
]
#define getEvidenceTypes( ghostType ) \
	l2i(GhostConst$evidenceTypes, ghostType)




#define LevelCustomType$GHOST "oGhost"				// Generic type for traps like the lasher
	#define LevelCustomEvt$GHOST$spawned 1			// void - The ghost has been spawned
	#define LevelCustomEvt$GHOST$caught 2			// key player - The ghost has caught a player
	

#define onLevelCustomGhostSpawned( ghost ) \
	if( isEventLevelCustom() AND argStr(1) == LevelCustomType$GHOST AND argInt(2) == LevelCustomEvt$GHOST$spawned ){ \
		key ghost = argKey(0);
#define onLevelCustomGhostCaught( ghost, player ) \
	if( isEventLevelCustom() AND argStr(1) == LevelCustomType$GHOST AND argInt(2) == LevelCustomEvt$GHOST$caught ){ \
		key ghost = argKey(0); \
		key player = argKey(3);



#define Ghost$followNodes( nodes ) \
	runOmniMethod("Ghost", GhostMethod$followNodes, nodes)
#define Ghost$stop( stop ) \
	runOmniMethod("Ghost", GhostMethod$stop, stop)
#define Ghost$toggleHunt( on ) \
	runOmniMethod("Ghost", GhostMethod$toggleHunt, on)
#define Ghost$setType( type, evidence ) \
	runOmniMethod("Ghost", GhostMethod$setType, type + evidence)
#define Ghost$smudge() \
	runOmniMethod("Ghost", GhostMethod$smudge, [])
#define Ghost$interact() \
	runOmniMethod("Ghost", GhostMethod$interact, [])
#define Ghost$sendToChair( chair, hud, temp ) \
	runOmniMethod("Ghost", GhostMethod$sendToChair, chair + hud + temp)



	

#endif
