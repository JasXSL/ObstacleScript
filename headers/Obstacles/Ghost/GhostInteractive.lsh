/*
	Script put into assets that can be interacted with
	
	Descriptions vary by type:
	light switch : [(str)room_name]
	
*/
#ifndef __GhostInteractive
#define __GhostInteractive


#define GhostInteractiveMethod$interact 1		// (int)flags, (float)throwStrength
	#define GhostInteractiveConst$INTERACT_ALLOW_STAINS 0x1		// Add stains if possible
	#define GhostInteractiveConst$NO_EVENT 0x2					// Don't raise a default event
#define GhostInteractiveMethod$breaker 2		// (bool)on - Breaker state changed
	
#define GhostInteractive$interact( targ, flags, throwStrength ) \
	runMethod( targ, "GhostInteractive", GhostInteractiveMethod$interact, (flags) + (throwStrength))
#define GhostInteractive$breaker( on ) \
	runOmniMethod( "GhostInteractive", GhostInteractiveMethod$breaker, (on))



#define GhostInteractiveEvent$trigger 1		// void - An interaction has triggered
#define GhostInteractiveEvent$breaker 2		// (bool)on - Breaker state has changed


// Level event bindings
#define LevelCustomType$GINTERACTIVE "oGint"				// Generic type for traps like the lasher
	#define LevelCustomEvt$GINTERACTIVE$lightSwitch 1					// (str)room, (bool)on - Tells the level the light switch state
	#define LevelCustomEvt$GINTERACTIVE$vibrator 2						// void - Tells the level that the vibrator has been picked up
	
	
#define onLevelCustomLightSwitch( lightSwitch, room, on ) \
	if( isEventLevelCustom() AND argStr(1) == LevelCustomType$GINTERACTIVE AND argInt(2) == LevelCustomEvt$GINTERACTIVE$lightSwitch ){ \
		key lightSwitch = argKey(0); \
		string room = argStr(3); \
		bool on = argInt(4);
#define onLevelCustomVibrator() \
	if( isEventLevelCustom() AND argStr(1) == LevelCustomType$GINTERACTIVE AND argInt(2) == LevelCustomEvt$GINTERACTIVE$vibrator ){


#define onGhostInteractiveTrigger() \
	if( SENDER_SCRIPT IS "GhostInteractive" AND EVENT_TYPE IS GhostInteractiveEvent$trigger ){
#define onGhostInteractiveBreaker(on) \
	if( SENDER_SCRIPT IS "GhostInteractive" AND EVENT_TYPE IS GhostInteractiveEvent$breaker ){ \
		bool on = argInt(0);


#endif
