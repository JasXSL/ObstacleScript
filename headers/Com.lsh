#ifndef __Com
#define __Com

// db

#define ComGet$host() idbGetByIndex(idbTable$COM, idbTable$COM$HOST)


#define ComMethod$invite 1				// void - Invites a player to your current game
#define ComMethod$inviteSuccess 2		// void - Invites a player to your current game
#define ComMethod$players 3				// player1, player2... - Updates players
#define ComMethod$huds 4				// hud1, hud2... - Updates huds
#define ComMethod$uninvite 5			// void - When sent from the host, wipes all players
#define ComMethod$updatePortal 6		// void - Sends callbacks with players and huds. See Portal.lsh for the callbacks
#define ComMethod$debug 7				// void - Outputs debug info

// Events
#define ComEvt$hostChanged 1			// void - Raised with whenever you join a game


#define onComHostChanged() \
	if( SENDER_SCRIPT IS "Com" AND EVENT_TYPE IS ComEvt$hostChanged ){



#define Com$invite( target ) \
	runMethod(target, "Com", ComMethod$invite, [])
#define Com$uninvite( target ) \
	runMethod(target, "Com", ComMethod$uninvite, [])
#define Com$inviteSuccess( target ) \
	runMethod(target, "Com", ComMethod$inviteSuccess, [])
#define Com$players( target, players ) \
	runMethod(target, "Com", ComMethod$players, players )
#define Com$huds( target, huds ) \
	runMethod(target, "Com", ComMethod$huds, huds )
#define Com$updatePortal() \
	runMethod(llGetOwner(), "Com", ComMethod$updatePortal, [] )


#endif
